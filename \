#include "../util/tabela_simbolos.h"
#include "tac.h"
#include <stdio.h>

void tac()
{
    FILE* arquivo = fopen("saida/saida.tac", "w");
    if(arquivo == NULL)
    {
        fprintf(stderr, "Erro ao abrir o arquivo.txt\n");
        return;
    }
    fclose(arquivo);

    declaracoes_tac();
}

void declaracoes_tac_recursivo(Escopo* escopo)
{
    if(!escopo)
        return;

    Simbolo *simbolo, *tmp;
    while(escopo)
    {
        HASH_ITER(hh, escopo->tabela_hash, simbolo, tmp)
        {
            if(simbolo->tag == CONSTANTE)
            {
                printf("%s\n", simbolo->identificador);
            }
        }
        if(escopo->proximo)
            declaracoes_tac_recursivo(escopo->proximo);
        
        escopo = escopo->filho;
    }
}

void declaracoes_tac()
{
    FILE* arquivo = fopen("saida/saida.tac", "a");
    if(arquivo == NULL)
    {
        fprintf(stderr, "Erro ao abrir o arquivo.txt\n");
        return;
    }

    Escopo* escopo = tabela_simbolos->escopo_atual;

    while(escopo->pai != NULL)
        escopo = escopo->pai;

    declaracoes_tac_recursivo(escopo);
    fclose(arquivo);
}


